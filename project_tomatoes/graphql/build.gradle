plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.netflix.dgs.codegen' version '5.2.4'
}

group = 'com.course'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"
	implementation "com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure"

	implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.27'

	implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.70'
	implementation group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '5.0.3.Final'


}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava{
	packageName = 'com.course.graphql.generated'
	typeMapping = ["Date" : "java.time.LocalDate",
			       "NonNegativeInt" : "java.lang.Integer",
				   "Url" : "java.net.URL",
			       "DateTime" : "java.time.OffsetDateTime"
				  ]
}
